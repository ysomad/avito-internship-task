---
openapi: 3.0.0
info:
  title: User Wallet API
  description: |
    User wallet API for managing user wallet balance.
  version: 1.0.0
servers:
- url: http://localhost:8080
tags:
- name: wallet
  description: Operations with user wallet
- name: reserve
  description: Operations with user reserve wallet
- name: report
  description: Operations with revenue report
paths:
  /wallets/{user_id}:
    get:
      tags:
      - wallet
      summary: Add funds to the user wallet
      operationId: getWallet
      parameters:
      - name: user_id
        in: path
        description: user id in uuid format
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        x-go-name: UserID
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Bad Request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Wallet Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      tags:
      - wallet
      summary: Add funds to the user wallet
      operationId: addFunds
      parameters:
      - name: user_id
        in: path
        description: user id in uuid format
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
      requestBody:
        $ref: '#/components/requestBodies/AddFundsRequestBody'
      responses:
        "200":
          description: Money added to wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /wallets/{user_id}/transactions:
    post:
      tags:
      - wallet
      summary: Get list of wallet transactions
      operationId: getTransactions
      parameters:
      - name: user_id
        in: path
        description: user id in uuid format
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
      requestBody:
        $ref: '#/components/requestBodies/TransactionListRequestBody'
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionList'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reserve/{user_id}:
    post:
      tags:
      - reserve
      summary: Reserve funds on the user wallet
      operationId: reserveFunds
      parameters:
      - name: user_id
        in: path
        description: user id in uuid format
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
      requestBody:
        $ref: '#/components/requestBodies/ReserveFundsRequestBody'
      responses:
        "200":
          description: Money reserved on the wallet
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Wallet Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reserve/{user_id}/revenue:
    post:
      tags:
      - reserve
      summary: Declare revenue
      description: Writes off money from the reserve wallet and adds it to the accounting report
      operationId: declareRevenue
      parameters:
      - name: user_id
        in: path
        description: user id in uuid format
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uuid
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
      requestBody:
        $ref: '#/components/requestBodies/DeclareRevenueRequestBody'
      responses:
        "200":
          description: All reserved money were added to the report
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "404":
          description: Wallet Not Found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reports/{month}:
    get:
      tags:
      - report
      summary: Get revenue report
      description: test
      operationId: getRevenueReport
      parameters:
      - name: month
        in: path
        description: month of specific year in format "2022-12"
        required: true
        style: simple
        explode: false
        schema:
          pattern: ^\d{4}\-(0?[1-9]|1[012])$
          type: string
          example: 2022-10
      responses:
        "200":
          description: OK.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RevenueReportResponse'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      required:
      - message
      type: object
      properties:
        message:
          type: string
    Wallet:
      required:
      - balance
      - id
      - reserved_balance
      - user_id
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-go-name: ID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        user_id:
          type: string
          format: uuid
          x-go-name: UserID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        balance:
          type: string
          example: "49.543"
        reserved_balance:
          type: string
          example: "11.79"
    TransactionOperation:
      type: string
      enum:
      - WITHDRAW
      - DEPOSIT
    Transaction:
      required:
      - amount
      - comment
      - from
      - id
      - operation
      - user_id
      type: object
      properties:
        id:
          type: string
          format: uuid
          x-go-name: ID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        user_id:
          type: string
          format: uuid
          x-go-name: UserID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        comment:
          type: string
          example: deposit from billing
        from:
          type: string
          description: empty means operation was initiated by billing
          format: uuid
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        amount:
          type: string
          example: "33.78"
        operation:
          $ref: '#/components/schemas/TransactionOperation'
    TransactionList:
      required:
      - next_page_cursor
      - transactions
      type: object
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        next_page_cursor:
          type: string
          example: U3dhZ2dlciByb2Nrcw==
    AddFundsRequest:
      required:
      - amount
      type: object
      properties:
        amount:
          type: string
          example: "35.4768"
    ReserveFundsRequest:
      required:
      - cost
      - order_id
      - service_id
      type: object
      properties:
        service_id:
          type: string
          format: uuid
          x-go-name: ServiceID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        order_id:
          type: string
          format: uuid
          x-go-name: OrderID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        cost:
          type: string
          example: "75.487"
    DeclareRevenueRequest:
      required:
      - cost
      - order_id
      - service_id
      type: object
      properties:
        service_id:
          type: string
          format: uuid
          x-go-name: ServiceID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        order_id:
          type: string
          format: uuid
          x-go-name: OrderID
          x-go-type: google_uuid.UUID
          x-go-type-import:
            name: google_uuid
            path: github.com/google/uuid
        cost:
          type: string
          example: "75.487"
    RevenueReportResponse:
      required:
      - report_url
      type: object
      properties:
        report_url:
          type: string
          format: uri
          x-go-name: ReportURL
    SortOrder:
      type: string
      enum:
      - ASC
      - DESC
    TransactionListSort:
      required:
      - amount
      - date
      type: object
      properties:
        date:
          $ref: '#/components/schemas/SortOrder'
        amount:
          $ref: '#/components/schemas/SortOrder'
    TransactionListRequest:
      required:
      - page_cursor
      - sort
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/TransactionListSort'
        page_cursor:
          type: string
          example: U3dhZ2dlciByb2Nrcw==
  requestBodies:
    AddFundsRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddFundsRequest'
      required: true
    ReserveFundsRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ReserveFundsRequest'
      required: true
    DeclareRevenueRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DeclareRevenueRequest'
      required: true
    TransactionListRequestBody:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TransactionListRequest'
      required: true
